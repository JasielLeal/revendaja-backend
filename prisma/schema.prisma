generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  secondName    String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String? // Armazenar a senha criptografada
  role          String    @default("User")
  paymentStatus String    @default("Free") // "ACTIVE", "EXPIRED", "BLOCKED"
  lastPayment   DateTime? // Data do último pagamento
  stores        Store[] // Relação com lojas
}

model Store {
  id          String   @id @default(uuid())
  name        String   @unique
  status      String   @default("Ativa")
  description String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  stock       Stock[] // Relação com o estoque da loja
}

model Stock {
  id             String   @id @default(uuid())
  quantity       Int      @default(0) // Quantidade do produto no estoque da loja
  customPrice    String? // Preço personalizado definido pela loja (opcional)
  suggestedPrice String? // Preço sugerido
  normalPrice    String? // Preço antigo para histórico e comparações
  status         String   @default("Disponivel") // Status do produto (Ex: Disponível, Esgotado)
  storeId        String
  store          Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  productId      String
  product        Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  updatedAt      DateTime @updatedAt // Data de atualização do estoque

  @@unique([storeId, productId])
}

model Product {
  id             String   @id @default(uuid())
  name           String
  normalPrice    String // Preço base global
  suggestedPrice String // Preço sugerido pela empresa
  description    String
  brand          String // Marca do produto
  company        String // Nome da empresa fornecedora
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  stock          Stock[] // Relação com estoques
}
