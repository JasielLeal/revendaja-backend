// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  secondName    String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String? // Armazenar a senha criptografada
  role          String    @default("User")
  paymentStatus String    @default("Free") // "ACTIVE", "EXPIRED", "BLOCKED"
  lastPayment   DateTime? // Data do último pagamento
  stores        Store[] // Relação com lojas
}

model Store {
  id        String   @id @default(uuid())
  name      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Stock     Stock[]
}

model Stock {
  id        String  @id @default(uuid())
  quantity  Int     @default(0)
  storeId   String
  store     Store   @relation(fields: [storeId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Product {
  id          String   @id @default(uuid())
  name        String
  oldPrice    String
  price       String
  description String
  company     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Stock       Stock[]
}
